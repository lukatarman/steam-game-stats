name: Validate, build, tag, push and deploy backend.

on:
  push:
    branches: [master]
    paths: ["backend/**"]
  pull_request:
    branches: [master]
    paths: ["backend/**"]
    types:
      - opened
      - synchronize

jobs:
  validate:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.18.2]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install backend dependencies
        run: npm ci -w backend

      - name: Prettier check
        run: npm run -w backend prettier:check

      - name: Unit tests
        run: npm run -w backend unit-test

      - name: Integration tests
        run: npm run -w backend integration-test

      - name: Check if a valid semver git tag is present
        run: |
          GIT_TAG=$(git describe --tags --exact-match)
          # https://github.com/semver/semver/issues/981
          SEMVER_REGEX="^(backend|frontend)\/v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)(-((0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9][0-9]*|[0-9]*[a-zA-Z-][0-9a-zA-Z-]*))*))?(\+([0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*))?$"
          if [[ -z "$GIT_TAG" ]]; then
            echo "ERROR: no tag found"
            exit 1
          elif ! [[ $GIT_TAG =~ $SEMVER_REGEX ]]; then
            echo "ERROR: $GIT_TAG is not a Semver tag with expected prefix"
            exit 1
          else
            echo "Tag found: $GIT_TAG"
          fi

  build-and-push:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: sjakusch/steam-game-stats-backend
          tags: |
            type=match,pattern=backend\/v(\d+.\d+.\d+),group=1

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          # push only if master is updated
          push: ${{ github.ref == 'refs/heads/master' }}
          file: backend/Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on Render
        # deploy only if master is updated
        if: github.ref == 'refs/heads/master'
        env:
          deploy_url: ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
        run: |
          curl "$deploy_url"
